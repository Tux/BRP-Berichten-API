openapi: 3.1.0
info:
  title: BRP berichten API
  version: 0.4.0
  description: |
    Een REST API voor het a-synchroon uitwisselen van berichten welke in het Logisch Ontwerp gedefinieerd zijn.

    # Wijzigingshistorie:
    ## 0.4.0 Juni 2024
    - De json-schema's van de berichtsoorten zijn opgenomen in de OpenAPI Specificatie. Voor elke berichtsoort die het LO beschrijft, is opgenomen hoe dit bericht gestructureerd is.
      - Houdt er rekening mee dat het weergeven van de OpenAPI specificatie in de web-versie va SwaggerUI hierdoor trager geworden is. Het is aan te raden om de alternatieve (redocly) weergave te gebruiken:
        - https://brp-berichten-api.dictua.ictu-sr.nl/openapi/berichten-api.html
        - De JSON schema's zijn tevens te vinden op onze Github pagina.

    ## 0.3.0 - Mei 2024
    - Conversie endpoints
      - Introductie bericht-conversie (/berichten/conversie) endpoint. Houdt er rekening mee dat de conversie naar JSON opgenomen is, maar nog niet geïmplementeerd is in de demo omgeving.
    - Het limiet van het aantal berichten dat verwijderd kan worden is gelijkgesteld aan dat wat gelijktijdig opgehaald kan worden (100).
    - De API is hernoemd van "BRP A-Synchrone berichten API" naar "BRP berichten API".
      - Nieuwe URL's demo omgeving:
        - https://brp-berichten-api.dictua.ictu-sr.nl/api/v1/berichten
        - https://brp-berichten-api.dictua.ictu-sr.nl/openapi/berichten-api.html
        - https://brp-berichten-api.dictua.ictu-sr.nl/swagger-ui/index.html
    - Beschikbaarheid endpoint(s)
      - Er is een tweede ping endpoint bijgekomen waardoor en nu een HEAD of een GET gedaan kan worden. De response blijft hetzelfde. U kunt zelf kiezen welke van deze twee u hanteert.
      - De noodzaak voor authenticatie op het `ping` endpoint is komen te vervallen. U kunt dus zonder noodzaak van authenticatie vaststellen of de dienst beschikbaar is.

    ## 0.2.2 - April 2024
    - Ping operatie toegevoegd t.b.v. het verifiëren dat er communicatie met de berichtendienst mogelijks is.
    - De standaard sortering bij een LIST operatie is op dit moment:
      1. `Datum + tijdstip van ontvangst` waarbij geldt dat het oudste bericht als eerste wordt weergegeven in de lijst met beschikbare berichten (rationale deze dient als eerste verwerkt worden door de ontvanger).
      2. Indien `datum + tijdstip van ontvangst` gelijk zijn (wat kan voorkomen aangezien er meerdere berichten tegelijk ingestuurd kunnen worden), dan worden `afzender` en het `messageId` meegenomen in de sortering. De volgorde die de afzender toegekend heen via de messageId is op dat moment dus bepalend.

    ## 0.2.1 - April 2024
    - Mogelijkheden tot sortering bij een list operatie zijn verwijderd. De standaard sortering wordt nog bepaald.
    - Demo omgeving is toegevoegd aan de lijst met servers.
      - API te benaderen via https://brp-berichten-api.dictua.ictu-sr.nl/api/v1/berichten
      - Swagger UI via: https://brp-berichten-api.dictua.ictu-sr.nl/swagger-ui/index.html
      - De OpenAPI specificatie via: https://brp-berichten-api.dictua.ictu-sr.nl/openapi.brp-berichten-api-v1.yaml
    - Wachtwoord wijzigingen optie is verwijderd.
    - Het `berichtFormaat` attribuut is komen te vervallen. Alle berichten zijn nu per definitie in JSON formaat. De eis om de berichtInhoud Base64 te
      encoderen komt daarmee te vervallen.
    - Voorbeelddata verbeterd.
    - Tellingen endpoint toegevoegd welke invulling geeft aan de mailbox Summarize tegenhanger.
    - Delete endpoint gecorrigeerd. De collectie `succesvolVerwijderdeBerichten` was van het type string i.p.v. berichtTransportId.
    - Limieten zijn gewijzigd:
      - Het aantal berichten dat via een PUT verstuurd kan worden is verhoogd naar 25. Uitgaande van een gemiddelde berichtgrootte van 40kb geeft dat een request van 1MB groot.
      - Het aantal berichten dat via een LIST opgevraagd kan worden is vergroot naar 2000. Daarbij krijgt u de mogelijkheid om dit aantal te beperken.
        - 2000 berichten in een LIST operatie komt neer op ongeveer 600KB response grootte.
      - Het aantal berichten dat via een GET ontvangen kan worden is verhoogd naar 100. Dit heeft te maken met de gangbare (veilige) restricties van een URL qua lengte (2KB).
        - Voor de URL worden 256 bytes gereserveerd.
          - Voor de UUID blijven dan 1.792 bytes over.
        - Een BerichtTransportId is 17 bytes groot (UUID + separatie-karakter ',')
          - Uitgaande van 17 bytes, zou dit 105 keer herhaald kunnen worden. Om aan de veilige kan te zitten en om op een mooi rond getal uit te komen kiezen wij voor 100 als limiet.
        - Uitgaande van een gemiddelde berichtgrootte van 40KB komt je met 100 berichten uit op 4MB qua response-grootte.
    - "aantalKeerOpgehaald" en "dtLaatstOpgehaald" zijn verwijderd uit response van LIST (ListMessageKenmerken schema). Wij zien hierin geen meerwaarde voor de aansluitende partijen. Wel kunt u blijven zien OF het bericht is opgehaald (boolean waarde).

    ## 0.2.0 - April 2024
    - "List" verzoek is verhuisd van "/berichten/lijst" --> "/berichten"
    - "GET" van meerdere berichten wordt gedaan middels path-parameters i.p.v. query-parameters en is samengevoegd met het endpoint voor het ophalen van een enkel bericht.<br/>
      (/berichten/?berichtTransportIds=[UUID],[UUID] --> /berichten/[UUID],[UUID])
      (/berichten/?berichtTransportIds=[UUID],[UUID] --> /berichten/[UUID],[UUID])
    - "DELETE" van meerdere berichten wordt gedaan middels path-parameters i.p.v. query-parameters en is samengevoegd met het endpoint voor het verwijderen van een enkel bericht.<br/>
      (/berichten/?berichtTransportIds=[UUID],[UUID] --> /berichten/[UUID],[UUID])
    - Het "berichtId" wat correspondeert met het "MessageId" veld van de mailboxserver is qua type gewijzigd van String naar Integer. Maximale lengte 12.
      - Beschrijving LO: MessageId, lengte: 12, Het unieke volgnummer dat aan het uitgaande bericht wordt toegekend.
    - Het veld "verwijzingBerichtId" wat correspondeert met het "CrossReference" veld van de mailboxserver:
      - is qua type gewijzigd van String naar Integer. Maximale lengte 12.
      - kan of weggelaten worden, of gevuld worden met 0 indien het bericht een eerste bericht in de cyclus betreft.
    - "aantalKeerOpgehaald" is toegevoegd aan de ListMessageKenmerken.

    ## 0.1.0 - Maart 2024
    Initiële versie.

    # In ontwikkeling:
    - Conversie API om te kunnen vertalen tussen UTF8 / Teletex formaten naar het nieuwe JSON formaat (heen en terug)
    - Opstellen van de diverse berichtformaten (in JSON) en de realisatie van voorbeeldberichten.
    - Beschrijven van alle mogelijke foutmeldingen in deze API spec.
    - Bepalen of het een checksum op de berichtinhoud van meerwaarde kan zijn.
    - Delete operatie implementeren.

    # Voorlopige limieten:
    | Waarde | Omschrijving |
    |--------|--------------|
    | 1      | Aantal ontvangers per bericht. |
    | 25     | Maximum aantal berichten dat in één PUT request verstuurd mag worden. |
    | 100     | Maximum aantal berichten dat in één DELETE request verwijderd mag worden |
    | 2000   | Maximum aantal berichten dat in één LIST request getoond zal worden. Indien wenselijk kunt u dit aantal middels een query-parameter beperken. |
    | 100    | Maximum aantal berichten dat in één GET request ontvangen mag worden. |
    | 64kb   | Maximum grootte van één enkel bericht. Één request zal qua grootte dan uitkomen op ((maximale-grootte-enkel-bericht * maximaal-aantal-berichten) + overhead). Houdt er rekening mee dat dit een waarde is die in te toekomst kan gaan groeien. Beperk uw oplossing dus niet op deze waarde! |

tags:
  - name: Berichtenverkeer
    description: API waarop berichten uitgewisseld kunnen worden.
servers:
  - url: https://async-berichten-api.dictua.ictu-sr.nl/
    description: Demo omgeving (via internet)
  - url: http://async-berichten-api.gbav-3.dictua.iesprd.ictu-sr.nl:8083/
    description: Demo omgeving (AP via VPN)
  - url: http://localhost:8083/
    description: Lokale ontwikkelomgeving
security:
  - BasicAuth: [ ]
paths:
  #  /api/v1/account/wachtwoord:
  #    put:
  #      tags:
  #        - Accountbeheer
  #      summary:
  #        Wachtwoord wijzigen
  #      description:
  #        Stelt een afnemende partij in staat om het wachtwoord van een account te wijzigen.
  #      operationId: wijzigWachtwoord
  #      requestBody:
  #        content:
  #          application/json; charset=utf-8:
  #            schema:
  #              type: object
  #              required:
  #                - nieuwWachtwoord
  #              properties:
  #                nieuwWachtwoord:
  #                  type: string
  #      responses:
  #        '204':
  #          description: Wachtwoord succesvol gewijzigd
  #        '400':
  #          description: Wachtwoord wijzigen verzoek niet in orde (bijvoorbeeld wanneer het nieuwe wachtwoord niet aan de vereisten voldoet)
  #          content:
  #            application/problem+json:
  #              schema:
  #                allOf:
  #                  - $ref: '#/components/schemas/probleem-antwoord'

  /api/v1/berichten:
    post: # (= sPd PUT)
      tags:
        - Berichtenverkeer
      summary: Het versturen van een of meerdere berichten (PUT).
      description: >
        Dit endpoint gebruikt u om berichten zoals gespecificeerd in het Logisch Ontwerp te versturen.
      operationId: putMessages
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/put-message-request'
      responses:
        '201':
          description: a-Synchrone response. Een eventueel antwoord op een bericht wordt later voor u klaargezet en dient separaat opgehaald te worden.
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/put-message-antwoord'
        '500':
          $ref: '#/components/responses/500'

    get: # (= sPd LIST)
      tags:
        - Berichtenverkeer
      summary: Het ophalen van een lijst met berichten die klaarstaan (LIST).
      description: >
        Dit endpoint gebruikt u om te achterhalen welke berichten er voor u beschikbaar zijn.
      operationId: listMessages
      parameters:
        - in: query
          name: status
          explode: false
          style: form
          schema:
            type: array
            default: [ nieuw, gezien-in-lijst ]
            items:
              type: string
              enum: [ nieuw, gezien-in-lijst, opgehaald ]
          required: false
          description: >
            Geeft aan welke berichten opgenomen moeten worden in het resultaat. Comma-gescheiden veld. Indien leeg worden alle niet opgehaalde berichten getoond (`nieuw` + `gezien-in-lijst`).

              - `nieuw`: Geeft berichten welke nog nooit opgehaald zijn en tevens niet in de lijst operatie zijn getoond.
              - `gezien-in-lijst`: Geeft berichten die nog niet opgehaald zijn, maar al wel gezien zijn in de lijst.
              - `opgehaald`: Geeft berichten reeds opgehaald zijn.
        - in: query
          name: berichtType
          description: Geeft aan welke type berichten opgenomen moeten worden in het resultaat. Indien leeg of niet aanwezig worden alle berichten getoond. Niet hoofdlettergevoelig.
          schema:
            $ref: "#/components/schemas/BerichtType"
        - in: query
          name: vanafMoment
          description: Het resultaat zal alleen berichten bevatten die vanaf dit moment ontvangen zijn. Wanneer deze waarde niet opgegeven is, worden alle berichten getoond die nog beschikbaar zijn (waarvan de retentietijd nog niet verlopen is).
          required: false
          schema:
            type: string
            format: date-time
            examples:
              - "2024-04-25T14:54:08.986661+02:00"
        - in: query
          name: totMoment
          description: Het resultaat zal alleen berichten bevatten die tot dit moment ontvangen zijn. Wanneer deze waarde niet opgegeven is, worden alle berichten getoond t/m het heden.
          required: false
          schema:
            type: string
            format: date-time
            examples:
              - "2024-04-26T14:54:08.986661+02:00"
        - $ref: "#/components/parameters/paginaParam"
        - in: query
          name: berichtenPerPagina
          schema:
            type: integer
            minimum: 1
          required: false
          description: >
            Het maximum aantal berichten dat geretourneerd mag worden. Indien deze waarde het ingesteld systeemlimiet overschrijdt, dan wordt het systeemlimiet gehanteerd. Indien er geen waarde wordt opgegeven, dan wordt tevens het systeemlimiet gehanteerd.
      responses:
        '200':
          description: Een opsomming van de berichten die beschikbaar zijn voor de mailbox die gekoppeld is aan het geauthenticeerde account.
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/list-message-antwoord'
        '500':
          $ref: '#/components/responses/500'

  /api/v1/berichten/{berichtTransportIdsParam}:
    get: # (=sPd GET, 1 of meerdere bericht)
      tags:
        - Berichtenverkeer
      summary: Het ophalen van een of meerdere berichten (GET).
      description: >
        Dit endpoint gebruikt u om berichten op te halen.
      operationId: getMessages
      parameters:
        - $ref: '#/components/parameters/berichtTransportIdsParam'
      responses:
        '200':
          description: Deze 200 OK response wordt vrijwel alle situaties geretourneerd, mits er geen technische fouten opgetreden zijn. Indien er bij het ophalen van het bericht iets mis ging, dan vindt u dat per bericht terug in de response.
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/get-message-antwoord'
        '500':
          $ref: '#/components/responses/500'
    delete: # (= sPd DELETE)
      tags:
        - Berichtenverkeer
      summary: Het verwijderen van een of meerdere berichten (DELETE).
      description: >
        Verwijderen van een of meerdere berichten. De berichten kunnen na deze actie niet meer bij de berichten API opgehaald worden.
      operationId: deleteMessages
      parameters:
        - $ref: '#/components/parameters/berichtTransportIdsParam'
      responses:
        '200':
          description: Deze 200 OK response wordt vrijwel alle situaties geretourneerd, mits er geen technische fouten opgetreden zijn. Indien er bij het verwijderen van het bericht iets mis ging, dan vindt u dat per bericht terug in de response.
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/delete-message-antwoord'
        '500':
          $ref: '#/components/responses/500'

  /api/v1/berichten/ping:
    get:
      security: [ ]
      tags:
        - Bereikbaarheid
      summary: Ping operatie t.b.v. het toetsen van de bereikbaarheid van de API vanuit de aangesloten partij.
      description: >
        Deze operatie kan aangeroepen worden door aangesloten partijen om te verifiëren dat er communicatie met de berichtendienst mogelijks is.
      operationId: ping-get
      responses:
        '204':
          description: Geeft aan dat de API bereikt kon worden.
    head:
      security: [ ]
      tags:
        - Bereikbaarheid
      summary: Ping operatie t.b.v. het toetsen van de bereikbaarheid van de API vanuit de aangesloten partij.
      description: >
        Deze operatie kan aangeroepen worden door aangesloten partijen om te verifiëren dat er communicatie met de berichtendienst mogelijks is.
      operationId: ping-head
      responses:
        '204':
          description: Geeft aan dat de API bereikt kon worden.

  /api/v1/berichten/telling:
    get:
      tags:
        - Berichtenverkeer
      operationId: summarize
      summary: Voert verschillende soorten tellingen uit waarmee bepaald kan worden hoeveel berichten er verwerkt dienen te worden (SUMMARIZE).
      parameters:
        - in: query
          name: soort
          style: simple
          description: >
            Geeft aan welke telling er uitgevoerd moet worden.
              - nieuw: Geeft het aantal nieuwe berichten terug dat nog niet gezien is via een LIST operatie en tevens nog niet opgehaald is middels een GET operatie.
              - gezien-in-lijst-en-niet-opgehaald: Geeft het aantal nieuwe berichten terug dat gezien is via een LIST operatie, maar nog niet opgehaald is middels een GET operatie.
              - niet-opgehaald: Geeft het aantal nieuwe berichten terug dat nog niet opgehaald is middels een GET operatie.
          required: true
          allowEmptyValue: false
          schema:
            type: string
            enum:
              - nieuw
              - gezien-in-lijst-en-niet-opgehaald
              - niet-opgehaald
      responses:
        '200':
          description: Het resultaat van de telling.
          content:
            application/json; charset=utf-8:
              schema:
                allOf:
                  - $ref: '#/components/schemas/generiek-antwoord'
                  - type: object
                    required:
                      - aantalBerichten
                    properties:
                      aantalBerichten:
                        type: integer
                        description: Het aantal berichten dat voldeed aan de criteria.
                        examples:
                          - 156980
        '400':
          description: Indien er een telling-soort gevraagd werdt die niet bestaat, of wanneer er geen telling-soort is opgegeven.
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/probleem-antwoord'


  /api/v1/berichten/conversie:
    post:
      tags:
        - Berichtconversie
      operationId: converteer
      summary: Dit endpoint faciliteert bij de conversie van berichten tussen de verschillende soorten berichtformaten.
      requestBody:
        description: >
          Er zijn verschillende waarden die voor de headers `Content-Type` en `Accept` gebruikt kunnen worden. Elk van deze waarden stelt een van de bekende formaten voor:
            - "text/plain; charset=teletex": Het klassieke berichtenformaat waarbij de teletex charset wordt gehanteerd.
            - "text/plain+base64; charset=teletex": Het klassieke berichtenformaat waarbij de teletex charset wordt gehanteerd. De body is in dit geval Base64 geëncodeerd.
            - "text/plain; charset=utf-8": Het klassieke berichtenformaat waarbij de UTF-8 charset wordt gehanteerd.
            - "text/plain+base64; charset=utf-8": Het klassieke berichtenformaat waarbij de UTF-8 charset wordt gehanteerd. De body is in dit geval Base64 geëncodeerd.
            - "application/json; charset=utf-8": Het meest recente berichtenformaat gebaseerd op JSON en de UTF-8 charset.

          Middels deze waarden kunt u via de Content-Type en Accept headers aanduiden welk formaat u instuurt en welk formaat u terug wenst te ontvangen.
        content:
          text/plain; charset=utf-8:
            schema:
              type: string
          text/plain+base64; charset=utf-8:
            schema:
              type: string
              contentEncoding: base64
          text/plain; charset=teletex:
            schema:
              type: string
              format: binary
          text/plain+base64; charset=teletex:
            schema:
              type: string
              contentEncoding: base64
          application/json; charset=utf-8:
            schema:
              $ref: "#/components/schemas/LoBericht"
      responses:
        '200':
          description: Een naar JSON geconverteerd bericht
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  berichtInhoud:
                    $ref: "#/components/schemas/BerichtInhoud"
                  validatieFouten:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        code:
                          type: string
                        message:
                          type: string
                        property:
                          type: string
                        evaluationPath:
                          type: string
                        schemaLocation:
                          type: string
                        messageKey:
                          type: string
                        arguments:
                          type: array
                          items:
                            type: string
            text/plain; charset=utf-8:
              schema:
                type: string
            text/plain+base64; charset=utf-8:
              schema:
                type: string
            text/plain; charset=teletex:
              schema:
                type: string
                format: binary
            text/plain+base64; charset=teletex:
              schema:
                type: string
                contentEncoding: base64
        '406':
          description: Wanneer een conversie werd aangevraagd voor een doelformaat dat niet ondersteund wordt.
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/probleem-antwoord"
        '415':
          description: Wanneer een conversie werd aangevraagd voor een bronformaat dat niet ondersteund wordt.
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/probleem-antwoord"

components:
  schemas:
    put-message-request:
      type: object
      required:
        - berichten
      properties:
        berichten:
          type: array
          items:
            $ref: '#/components/schemas/PutMessage'

    put-message-antwoord:
      allOf:
        - $ref: '#/components/schemas/generiek-antwoord'
        - type: object
          required:
            - succesvolVerwerkteBerichten
            - nietSuccesvolVerwerkteBerichten
          properties:
            verwerkteBerichten:
              type: array
              items:
                required:
                  - berichtId
                  - berichtTransportId
                properties:
                  berichtId:
                    $ref: '#/components/schemas/BerichtId'
                  berichtTransportId:
                    $ref: '#/components/schemas/BerichtTransportId'
            nietVerwerkteBerichten:
              type: array
              items:
                required:
                  - berichtId
                  - berichtTransportId
                  - foutmeldingen
                properties:
                  berichtId:
                    $ref: '#/components/schemas/BerichtId'
                  berichtTransportId:
                    $ref: '#/components/schemas/BerichtTransportId'
                  foutmeldingen:
                    type: array
                    items:
                      $ref: '#/components/schemas/Foutmelding'

    list-message-antwoord:
      allOf:
        - $ref: '#/components/schemas/generiek-antwoord'
        - type: object
          required:
            - berichten
          properties:
            berichten:
              type: array
              items:
                $ref: '#/components/schemas/ListMessageKenmerken'
        - $ref: '#/components/schemas/PagineerbaarResultaat'

    get-message-antwoord:
      allOf:
        - $ref: '#/components/schemas/generiek-antwoord'
        - type: object
          required:
            - opgehaaldeBerichten
            - nietOpgehaaldeBerichten
          properties:
            opgehaaldeBerichten:
              type: array
              description: Gevraagde berichten die ook succesvol opgehaald konden worden.
              items:
                type: object
                required:
                  - berichtKenmerken
                  - berichtInhoud
                properties:
                  berichtKenmerken:
                    $ref: '#/components/schemas/GetMessageKenmerken'
                  berichtInhoud:
                    $ref: '#/components/schemas/BerichtInhoud'
            nietOpgehaaldeBerichten:
              type: array
              description: Gevraagde berichten die niet succesvol opgehaald konden worden.
              items:
                required:
                  - berichtTransportId
                  - foutmeldingen
                properties:
                  berichtTransportId:
                    $ref: '#/components/schemas/BerichtTransportId'
                  foutmeldingen:
                    type: array
                    items:
                      $ref: '#/components/schemas/Foutmelding'

    delete-message-antwoord:
      allOf:
        - $ref: '#/components/schemas/generiek-antwoord'
        - type: object
          properties:
            succesvolVerwijderdeBerichten:
              type: array
              uniqueItems: true
              description: In deze collectie staan de berichten die daadwerkelijk verwijderd zijn.
              items:
                $ref: '#/components/schemas/BerichtTransportId'
            nietSuccesvolVerwijderdeBerichten:
              type: array
              uniqueItems: true
              description: In deze collectie staan de berichten die niet verwijderd konden worden.
              items:
                type: object
                description: De foutmelding welke aangeeft waarom een bericht niet verwijderd kon worden.
                required:
                  - berichtTransportId
                  - foutmeldingen
                properties:
                  berichtTransportId:
                    $ref: '#/components/schemas/BerichtTransportId'
                  foutmeldingen:
                    type: array
                    items:
                      $ref: '#/components/schemas/Foutmelding'

    generiek-antwoord:
      type: object
      required:
        - interactieId
      properties:
        interactieId:
          type: string
          format: uuid
          description: Een uniek ID wat aan het HTTP request gekoppeld wordt.

    probleem-antwoord:
      oneOf:
        - $ref: '/openapi-problem-detail-v1.yml#/components/schemas/Probleem'

    PutMessage:
      type: object
      required:
        - berichtKenmerken
        - berichtInhoud
      properties:
        berichtKenmerken:
          $ref: '#/components/schemas/PutMessageKenmerken'
        berichtInhoud:
          $ref: '#/components/schemas/BerichtInhoud'

    PutMessageKenmerken:
      description: >
        De PutMessageKenmerken lijken op de PutEnvelope zoals dat gebruikt werd bij de mailboxserver. Ten
        opzichte van de mailboxserver zijn een aantal velden komen te vervallen en sommige hebben een andere naam gekregen:
          * Attention: Was gereserveerd voor toekomstig gebruik. In deze API niet langer relevant.
          * ContentType: Dit veld had altijd een vaste waarde. In deze API niet langer relevant.
          * DeferredDeliveryTime: Hiermee kon een gewenst tijdstip van aflevering aangegeven worden. Dit wordt niet door deze API ondersteund.
          * OriginatorORName: Wordt niet door deze API ondersteund. Dit veld wordt afgeleid door uit het account waarmee u ingelogd bent.
          * Priority: Dit veld had invloed op aflevertijden tussen MTA's. In deze API niet langer relevant.

        Zie toelichting bij "BerichtKenmerken" voor verschillen t.o.v. de MessageHeading van de mailboxserver.
      allOf:
        - $ref: '#/components/schemas/BerichtKenmerken'
        - type: object
          required:
            - berichtId
            - berichtType
            - ontvanger
          properties:
            ontvanger:
              $ref: '#/components/schemas/OntvangerOfAfzender'

    ListMessageKenmerken:
      allOf:
        - $ref: '#/components/schemas/BerichtKenmerken'
        - type: object
          required:
            - berichtTransportId
            - dtOntvangen
            - opgehaald
            - dtBewaardTot
          properties:
            berichtTransportId:
              $ref: '#/components/schemas/BerichtTransportId'
            berichtVolgnummer:
              $ref: '#/components/schemas/BerichtVolgnummer'
            verwijzingBerichtId:
              $ref: '#/components/schemas/VerwijzingBerichtId'
            afzender:
              $ref: '#/components/schemas/OntvangerOfAfzender'
            dtOntvangen:
              type: string
              format: date-time
              description: Het tijdstip waarop het bericht door de berichten API ontvangen is
              examples:
                - "2024-04-26T14:54:08.986661+02:00"
            opgehaald:
              type: boolean
              description: Geeft aan of dit bericht al eens eerder opgehaald is.
            dtBewaardTot:
              type: string
              format: date-time
              description: Tot dit moment zal het bericht beschikbaar zijn op de berichten API.
              examples:
                - "2024-05-03T14:54:08.986661+02:00"
    GetMessageKenmerken:
      allOf:
        - $ref: '#/components/schemas/ListMessageKenmerken'

    BerichtKenmerken:
      type: object
      description: >
        De BerichtKenmerken lijkt op de MessageHeading zoals dat gebruikt werd bij de mailboxserver. Ten opzichte van de mailboxserver zijn de
        onderstaande velden niet langer aan de orde en sommige hebben een andere naam gekregen.
          * CrossReference --> verwijzingBerichtId
          * MessageId --> berichtId
          * NotificationRequest: Wordt niet door deze API ondersteund.
          * NumberOfRecipients: Wordt niet door deze API ondersteund.
          * RecipientORName --> ontvanger
      required:
        - berichtId
        - berichtType
      properties:
        berichtId:
          $ref: '#/components/schemas/BerichtId'
        verwijzingBerichtId:
          $ref: '#/components/schemas/VerwijzingBerichtId'
        berichtType:
          $ref: '#/components/schemas/BerichtType'

    BerichtInhoud:
      $ref: "#/components/schemas/LoBericht"

    OntvangerOfAfzender:
      type: integer
      description: Het unieke nummer van een verzender/ontvanger.
      maximum: 9999999
      examples:
        - 3000200

    BerichtId:
      type: integer
      format: int64
      maximum: 999999999999
      examples:
        - 103693694
      description: |
        Het unieke volgnummer dat aan het uitgaande bericht wordt toegekend door de afzender.
        De "BRP berichten API" voert geen inhoudelijke controles uit op dit BerichtId. Maximaal 12 posities.

    VerwijzingBerichtId:
      type: integer
      format: int64
      maximum: 999999999999
      examples:
        - 213582583
      description: |
        Indien het bericht een antwoord is op een eerder door het eindsysteem ontvangen bericht: het `berichtId` van het eerder ontvangen bericht. Het veld correspondeert met het "CrossReference" veld van de mailboxserver.

        Het volgnummer van het bericht, waarop dit uitgaande bericht een reactie is. Dit volgnummer is het MessageId van het voorgaande bericht uit de cyclus.
        Is het bericht het eerste van een cyclus dan kan dit veld of weggelaten worden, of gevuld worden met 0;

    BerichtTransportId:
      type: string
      format: uuid
      description: "De is de referentie naar het bericht zoals deze bekend is bij de `BRP berichten API` (UUID). Bij elke interactie met deze dienst omtrent een bericht, wordt deze waarde gebruikt. Het mag, net zoals `berichtVolgnummer` gebruikt worden om het bericht uniek te identificeren."
      examples:
        - 190486a3-cf3d-4622-a6f7-1f2bfcd0abd6

    BerichtVolgnummer:
      type: integer
      format: int64
      description: "Dit volgnummer is het equivalent van het 'Dispatch sequence number'/'MSSequenceNumber' van de mailboxserver. Hiermee kan over verschillende media worden vastgesteld of dit bericht al eerder verwerkt is. Het nummer wordt door deze dienst uniek toegekend aan het bericht."
      examples:
        - 500012345678

    BerichtType:
      type: string
      examples:
        - "Lg01"
      maxLength: 4
      description: >
        Het soort bericht (zoals gedefinieerd in het berichtenboek in het Logisch Ontwerp).


        * Berichten ten behoeve van de bijhouding en de consistentie van de BRP
          * Berichten tussen bijhouders onderling
            * Berichten in verband met de vervolginschrijving tussen gemeenten:
              * Ii01 Initiatie intergemeentelijke verhuizing
              * Ib01 Verhuizen PL intergemeentelijk
              * Iv01 Verwijsgegevens
              * If01 Fout: PL niet te verzenden
              * If21 Fout: de ontvangen PL is niet de aangevraagde
              * If31 Fout: de verwijsgegevens zijn niet correct
            * Berichten in verband met de vervolginschrijving van de gemeente naar de RNI:
              * Rb01 Verhuizen PL van gemeente naar RNI
              * Rv01 Verwijsgegevens
              * Rf01 Fout: de ontvangen PL kan niet worden opgenomen
              * Rf31 Fout: de verwijsgegevens zijn niet correct
            * Berichten in verband met de vervolginschrijving van de RNI naar de gemeente:
              * Ji01 Initiatie verhuizing PL van RNI naar gemeente
              * Jb01 Verhuizen PL van RNI naar gemeente
              * Jv01 Verwijsgegevens
              * Jf01 Fout: PL niet te verzenden
              * Jf21 Fout: de ontvangen PL is niet de aangevraagde
              * Jf31 Fout: de verwijsgegevens zijn niet correct
            * Berichten in verband met een toevallige geboorte:
              * Tb01 Toevallige geboorte
              * Tv01 Verwijsgegevens
              * Tf01 Fout: persoon niet in te schrijven
              * Tf11 Fout: de verwijsgegevens zijn niet correct
            * Berichten in verband met een toevallige gebeurtenis:
              * Tb02 Toevallige gebeurtenis
              * Tf21 Fout: gebeurtenisgegevens niet te verwerken
            * Berichten in verband met het opnemen van verwijsgegevens:
              * Iv11 Verwijsgegevens
              * Iv21 Verificatie verwijsgegevens
              * If41 Fout: verwijsgegevens kunnen niet worden opgenomen
            * Berichten in verband met wijzigen A-nummer in de verwijsgegevens bij gemeenten en bij de RNI:
              * Wa01 Wijziging A-nummer
              * Wf01 Fout: A-nummerwijziging niet te verwerken
          * Berichten ten behoeve van de bijhouding
            * Berichten in verband met verblijfstitel:
              * Og11 Opnemen gegevens verblijfstitel
              * Of11 Fout: opnemen/wijzigen verblijfstitel niet mogelijk
          * Berichten ten behoeve van het bijhouden van de persoonsgegevens in BRP-V
            * Berichten in verband met synchronisatie met BRP-V:
              * Lg01 Synchronisatiebericht
              * Lq01 Synchronisatievraag
              * La01 Synchronisatieantwoord
              * Lf01 Fout: synchronisatievraag niet te beantwoorden
            * Berichten in verband met synchroniciteitsselecties:
              * Lg01 Synchronisatiebericht
        * Berichten ten behoeve van de gegevensverstrekkingen
          * Berichten in verband met spontane gegevensverstrekkingen als gevolg van afnemersindicaties op persoonslijsten:
            * Gv01 Spontane mutatie
            * Gv02 Spontane mutatie: infrastructurele wijziging
            * Wa11 Wijziging A-nummer ten behoeve van afnemers
            * Ng01 Afvoeren PL
            * Ag11 Vulbericht
            * Ag21 Conditionele gegevensverstrekking
            * Ag31 Foutherstelbericht
          * Berichten in verband met selecties:
            * Sv01 Selectieverstrekking
            * Sv11 Niemand geselecteerd
          * Berichten in verband met ad hoc vragen:
            * Hq01 Ad hoc vraag
            * Ha01 Ad hoc antwoord
            * Hf01 Fout: ad hoc vraag niet te beantwoorden
          * Berichten in verband met ad hoc adresvragen:
            * Xq01 Ad hoc adresvraag
            * Xa01 Ad hoc adresantwoord
            * Xf01 Fout: ad hoc adresvraag niet te beantwoorden
          * Berichten in verband met het muteren van afnemersindicaties op persoonslijsten:
            * Ap01 Plaatsen afnemersindicatie op persoonslijst
            * Ag01 Gegevensverstrekking als gevolg van ad hoc plaatsing afnemersindicatie op persoonslijst
            * Af01 Fout: plaatsen afnemersindicatie op persoonslijst onmogelijk
            * Av01 Verwijderen afnemersindicatie van persoonslijst
            * Af11 Fout: verwijderen afnemersindicatie van persoonslijst onmogelijk
        * Overige berichten
          * Berichten ten behoeve van het onderhouden van de autorisatietabel
            * Berichten in verband met het onderhoud van de autorisatietabel:
              * Ct01 Toevoegen tabelregel aan Autorisatietabel
              * Cw01 Wijzigen tabelregel in Autorisatietabel
              * Cb01 Beëindigen tabelregel in Autorisatietabel
            * Berichten ten behoeve van het onderhouden van de overige landelijke tabellen
              * Dt01 Toevoegen tabelregel
              * Dw01 Wijzigen tabelregel
            * De protocolfouten
              * Berichten om niet voorziene fouten in ontvangen berichten te melden:
                * Pf01 Fout: cyclus
                * Pf02 Fout: syntax
                * Pf03 Fout: inhoudelijk
            * Het vrije bericht
              * Bericht, vergelijkbaar met een mededeling op papier en als zodanig te gebruiken:
                * Vb01 Vrij bericht
                * Vb02 Vrij bericht via webservice
            * De verwerkbevestiging
              * Bericht om de verwerking van bepaalde gegevens te bevestigen:
                * Null Verwerkbevestiging (Null-bericht)

    PagineerbaarResultaat:
      type: object
      description: Structuur bij responses die grotere data sets kunnen opleveren.
      properties:
        paginering:
          $ref: "#/components/schemas/PagineringResultaat"

    PagineringResultaat:
      type: object
      properties:
        pagineringVerzoek:
          "$ref": "#/components/schemas/PagineringVerzoek"
        totaalAantalBerichten:
          type: integer
          format: int64
          default: 0
          examples:
            - 341
        aantalBerichtenOpDezePagina:
          type: integer
          default: 2000
          examples:
            - 2000
        aantalPaginas:
          type: integer
          default: 3
          examples:
            - 4
        huidigePagina:
          type: integer
          examples:
            - 2
        eerstePagina:
          type: boolean
          examples:
            - false
        laatstePagina:
          type: boolean
          examples:
            - false

    PagineringVerzoek:
      type: object
      properties:
        pagina:
          type: integer
          minimum: 0
          examples:
            - 2

    Foutmelding:
      type: object
      required:
        - foutType
        - foutTitel
        - foutDetail
      properties:
        foutType:
          type: string
          description: De foutcode horende bij de foutsituatie.
        foutTitel:
          type: string
          description: Korte beschrijving van de foutsituatie
        foutDetails:
          type: string
          description: De toelichting van de foutsituatie (indien mogelijk)

    LoBericht:
      oneOf:
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Af01Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Af11Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Ag01Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Ag11Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Ag21Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Ag31Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Ap01Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Av01Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Cb01Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Ct01Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Cw01Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Dt01Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Dw01Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Gv01Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Gv02Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Ha01Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Hf01Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Hq01Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Ib01Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/If01Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/If21Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/If31Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/If41Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Ii01Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Iv01Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Iv11Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Iv21Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Jb01Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Jf01Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Jf21Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Jf31Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Ji01Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Jv01Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/La01Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Lf01Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Lg01Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Lq01Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Ng01Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/NullBericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Of11Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Og11Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Pf01Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Pf02Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Pf03Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Rb01Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Rf01Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Rf31Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Rv01Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Sv01Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Sv11Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Tb01Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Tb02Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Tf01Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Tf11Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Tf21Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Tv01Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Vb01Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Vb02Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Wa01Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Wa11Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Wf01Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Xa01Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Xf01Bericht"
        - $ref: "brp/schemas/2024Q3/berichten.schema.json#/berichtsoorten/Xq01Bericht"
      discriminator:
        propertyName: berichtType
  responses:
    '202':
      description: Verzoek is geaccepteerd en wordt op een later moment verwerkt.
    '204':
      description: Verzoek is goed verwerkt, maar heeft geen inhoudelijke response.
    '500':
      description: Interne technische fout
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/probleem-antwoord'

  parameters:
    paginaParam:
      in: query
      name: pagina
      schema:
        type: integer
        default: 1
      required: false
      description: Pagina nummer, startend bij 1 t/m N (niet bij 0).

    berichtTransportIdsParam:
      in: path
      name: berichtTransportIdsParam
      required: true
      description: >
        Een UUID of meerdere UUID's van het bericht(en) die opgehaald moet worden. Indien meerdere UUID's, dan scheiden met een komma.
        Deze query parameter verwijst naar het berichtenId zoals deze bij de "BRP berichten API" bekend is, niet te verwarren met het
        BerichtId dat door de verzender is opgegeven. U verkrijgt deze UUID's middels een request naar `/api/v1/berichten/list`.
      schema:
        type: array
        items:
          $ref: '#/components/schemas/BerichtTransportId'
      examples:
        enkel:
          value: "28122289-f2f2-41c3-b33d-4c25c6620e9b"
          summary: "Een enkel bericht"
        meerdere:
          value: "30e24fd3-d625-4bbb-8793-0c053c2aae1b,9873f20d-587d-4d34-be17-ad9f06513fa1,22a98387-776e-47fa-be91-891c47adb70a"
          summary: "Meerdere berichten"
      style: simple
      explode: true

  securitySchemes:
    BasicAuth:
      description: Deze authenticatiemethode is van toepassing op de DEMO omgeving/stub. Login met elk willekeurig account/mailbox-nummer. Een wachtwoord kunt u opvragen via s.renkens@dictu.nl en/of maarten.woldring@rvig.nl.
      type: http
      scheme: basic
